# .github/workflows/ci.yml
name: NestJS CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm lint
        
      - name: Run unit tests
        run: pnpm test --coverage
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_NAME: test_db
          NODE_ENV: test

      # - name: Run e2e tests
      #   run: pnpm test:e2e
      #   env:
      #     DB_HOST: localhost
      #     DB_PORT: 5432
      #     DB_USERNAME: postgres
      #     DB_PASSWORD: postgres
      #     DB_NAME: test_db
      #     NODE_ENV: test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # build:
  #   name: Build Application
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Use Node.js 20.x
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 20.x

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #         run_install: false

  #     - name: Get pnpm store directory
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  #     - name: Setup pnpm cache
  #       uses: actions/cache@v3
  #       with:
  #         path: ${{ env.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile

  #     - name: Build
  #       run: pnpm build

  #     - name: Upload build artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dist
  #         path: dist/